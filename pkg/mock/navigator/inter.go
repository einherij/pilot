// Code generated by MockGen. DO NOT EDIT.
// Source: ../../pkg/navigator/inter.go

// Package mock_navigator is a generated GoMock package.
package mock_navigator

import (
	reflect "reflect"

	navigator "github.com/einherij/pilot/pkg/navigator"
	gomock "github.com/golang/mock/gomock"
)

// MockNav is a mock of Nav interface.
type MockNav struct {
	ctrl     *gomock.Controller
	recorder *MockNavMockRecorder
}

// MockNavMockRecorder is the mock recorder for MockNav.
type MockNavMockRecorder struct {
	mock *MockNav
}

// NewMockNav creates a new mock instance.
func NewMockNav(ctrl *gomock.Controller) *MockNav {
	mock := &MockNav{ctrl: ctrl}
	mock.recorder = &MockNavMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNav) EXPECT() *MockNavMockRecorder {
	return m.recorder
}

// GetPos mocks base method.
func (m *MockNav) GetPos() navigator.Position {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPos")
	ret0, _ := ret[0].(navigator.Position)
	return ret0
}

// GetPos indicates an expected call of GetPos.
func (mr *MockNavMockRecorder) GetPos() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPos", reflect.TypeOf((*MockNav)(nil).GetPos))
}
